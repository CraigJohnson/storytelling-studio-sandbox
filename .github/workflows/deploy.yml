# Storytelling Studio Apps deploy action
#
# S2 apps use Google docs and sheets to supply the data they consume. Updating that data
# has meant getting a developer to run a package.json script to save the data to the repo, 
# then either run a bash script to deploy the changes to the CDN or go through normal GitHub 
# pull request workflow to trigger an automated deployment.
#
# There is a want to cut the developer out of the process so that an editor can updata data
# in the Google doc, then select an action from the "Adds-ons" menu to trigger a deployment 
# directly. This action, combined with an add-on script, does just that.

name: Cloud Function Deploy

# Action triggered on repository_dispatch event, limited to deploy-project event
# https://help.github.com/en/actions/reference/events-that-trigger-workflows#external-events-repository_dispatch
on:
  repository_dispatch:
    types: [deploy-project]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # repository_dispatch event triggered via the GitHub API:
    # https://developer.github.com/v3/repos/#create-a-repository-dispatch-event
    # POST /repos/:owner/:repo/dispatches
    #  Input
    #  {
    #    "event_type": "deploy-project",
    #    "client_payload": {
    #      "project": "name-of-s2-apps-project"
    #    }
    #  }

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        echo This should be the targeted project:
        echo ${{github.event.client_payload.project}}
